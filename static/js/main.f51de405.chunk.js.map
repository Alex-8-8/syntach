{"version":3,"sources":["validators.js","components/signupComponents/EmailPass/EmailPass.js","components/signupComponents/DatePicker/DatePicker.js","components/signupComponents/OtherInfo/OtherInfo.js","redux/actionCreators.js","redux/constants.js","components/signupComponents/Completed/Completed.js","components/MyReduxForm.js","App.js","redux/mainReducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["min","emailValidation","value","test","undefined","required","minLength6","length","passwordsMatch","allValues","password","renderInput","input","label","meta","type","className","clsx","invalid","visited","error","EmailPass","Fragment","Field","name","component","validate","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","DatePicker","onErrorChange","useState","setDate","selectedDate","setSelectedDate","dateNow","dateNowMiliSecs","getTime","startDate","endDate","order","onMonthChange","onDayChange","onYearChange","onDateChange","onChange","pickedDateMiliSecs","ids","names","classes","dateContainer","yearContainer","monthContainer","dayContainer","yearOptions","monthOptions","dayOptions","defaultValues","options","yearReverse","monthShort","monthCaps","RenderDatePicker","setError","renderGender","connect","state","mainReducer","dispatch","payload","setErrorAction","Completed","selector","formValueSelector","ConnectReduxForm","step","nextStep","prevStep","handleSubmit","valid","onSubmit","getComponent","onClick","disabled","Enhanced","reduxForm","form","formData","console","log","JSON","stringify","App","initialState","rootReducer","combineReducers","action","formReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f51de405.chunk.js","sourcesContent":["export const emailValidation = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\n  'Invalid email address' : undefined\n\nexport const required = (value) => \n(!value || value === '') ? ' IS REQUIRED' \n: undefined;\n\nexport const minLength = min => value =>\n  value && value.length < min ? `Must be at least ${min} characters` : undefined;\n\nexport const minLength6 = minLength(6);\n\nexport const passwordsMatch = (value, allValues) => \n  (value !== allValues.password) ? 'Passwords don\\'t match' : undefined;","import React from 'react';\nimport { Field } from 'redux-form';\nimport clsx from 'clsx';\nimport { \n  emailValidation,\n  required, \n  minLength6, \n  passwordsMatch\n} from '../../../validators';\nimport './EmailPass.scss'\n\n\n\nconst renderInput = ({\n  input, \n  label, \n  meta,\n  type\n}) => (\n  <div className=\"form-email-pass\">\n    <label className={clsx(\n      \"form-email-pass__label\",\n      (meta.invalid && meta.visited) ? \"form-email-pass__label-error\" \n      : ''\n      )}\n    >\n    {\n      (meta.invalid && meta.visited) ? \n      (meta.error === ' IS REQUIRED' ? label + meta.error : meta.error) \n      : label \n    }\n    </label>\n    <div>\n      <input\n        type={type} \n        {...input} \n        className=\"form-email-pass__input\"\n      />\n      \n    </div>\n  </div>\n)\n\n\n\nexport const EmailPass = () => {\n  return (\n    <React.Fragment>\n      <Field \n        name='email' \n        component={renderInput} \n        label='EMAIL'\n        validate={[required, emailValidation]}\n        type=\"email\"\n      />\n      <Field \n        name=\"password\"\n        type=\"password\"\n        component={renderInput} \n        label='PASSWORD'\n        validate={[required, minLength6]}\n      />\n      <Field \n        name=\"confirmpassword\"\n        type=\"password\"\n        component={renderInput} \n        label='CONFIRMATION'\n        validate={[required, passwordsMatch]}\n      />\n    </React.Fragment>\n  )\n}\n","import React, {useState } from 'react';\nimport DropdownDate from 'react-dropdown-date';\nimport './DatePicker.scss'\n\nconst formatDate = (date) => {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n  export const DatePicker = ({input, meta, onErrorChange}) => {\n    const [date, setDate] = useState(null);\n    const [selectedDate, setSelectedDate] = useState('');\n    const dateNow = new Date();\n    const dateNowMiliSecs = dateNow.getTime()\n\n        return (\n            <div>\n\n                <DropdownDate\n                    startDate={                        \n                        '1950-01-01'                    \n                    }\n                    endDate={                           \n                        formatDate(dateNow)                 \n                    }\n                    selectedDate={                      \n                        selectedDate                    \n                    }\n                    order={                             \n                        ['day', 'month', 'year']        \n                    }\n                    onMonthChange={(month) => {         \n \n                    }}\n                    onDayChange={(day) => {             \n\n                    }}\n                    onYearChange={(year) => {           \n\n                    }}\n                    onDateChange={(date) => {           \n                        input.onChange(() => \n                        input.value = {\n                          day: date.getDate(),\n                          month: date.getMonth() + 1,\n                          year: date.getFullYear()\n                        }\n                        )\n                        setDate(date);\n                        setSelectedDate(formatDate(date));\n                        \n                        let pickedDateMiliSecs = date.getTime();\n                        const yearsOld = ((dateNowMiliSecs - pickedDateMiliSecs)/ (1000 * 3600 * 24)) / 365\n                        if (yearsOld < 18) {\n                          onErrorChange(true)\n                        } else {\n                          onErrorChange(false)\n                        }\n                    }}\n                    ids={                               \n                        {\n                            year: 'select-year',\n                            month: 'select-month',\n                            day: 'select-day'\n                        }\n                    }\n                    names={                             \n                        {\n                            year: 'year',\n                            month: 'month',\n                            day: 'day'\n                        }\n                    }\n                    classes={                           \n                        {\n                            dateContainer: 'date-picker',\n                            yearContainer: 'date-picker__field-wrapper',\n                            monthContainer: 'date-picker__field-wrapper',\n                            dayContainer: 'date-picker__field-wrapper',\n                            year: 'date-picker__date-select',\n                            month: 'date-picker__date-select',\n                            day: 'date-picker__date-select',\n                            yearOptions: 'date-picker__options',\n                            monthOptions: 'classes',\n                            dayOptions: 'classes'\n                        }\n                    }\n                    defaultValues={                     \n                        {\n                            year: 'YYYY',\n                            month: 'MM',\n                            day: 'DD'\n                        }\n                    }\n                    options={                           \n                        {\n                            yearReverse: true,              \n                            monthShort: true,               \n                            monthCaps: true                 \n                        }\n                    }\n                />\n            </div>\n        );\n}","import React from 'react'\nimport { Field } from 'redux-form'\nimport { connect } from 'react-redux';\nimport { DatePicker } from '../DatePicker/DatePicker'\nimport './OtherInfo.scss'\nimport { required } from '../../../validators'\nimport { setErrorAction } from '../../../redux/actionCreators'\n\n\nconst RenderDatePicker = ({\n  input,\n  label,\n  setError,\n  error\n}) => {\n\n  return (\n    <div className=\"other-info\">\n    {error ? <label className=\"other-info__label--error\">You must be older than 18 years</label> \n    : <label className=\"other-info__label\">{label}</label>}\n      <DatePicker input={input} onErrorChange={(error) => setError(error)}/>\n    </div>\n  )\n}\n\nconst renderGender = ({label})  => {\n  return (\n    <div className=\"other-info\">\n    <label className=\"other-info__label\">{label}</label>\n      <ul className=\"other-info__list\">\n        <li className=\"other-info__list-item\">\n            <Field \n              name=\"sex\" \n              component=\"input\" \n              type=\"radio\" \n              value=\"male\"\n              className=\"other-info__radio-button\"\n            />\n            <label className=\"other-info__radio-label\">MALE</label>\n        </li>\n        <li className=\"other-info__list-item\">\n            <Field \n              name=\"sex\" \n              component=\"input\" \n              type=\"radio\" \n              value=\"female\"\n              className=\"other-info__radio-button\"\n            /> \n            <label className=\"other-info__radio-label\">FEMALE</label>\n         </li>\n        <li className=\"other-info__list-item\">\n            <Field \n              name=\"sex\" \n              component=\"input\" \n              type=\"radio\" \n              value=\"unspecified\"\n              className=\"other-info__radio-button\"\n            /> \n            <label className=\"other-info__radio-label\">UNSPECIFIED </label>\n        </li>\n      </ul>\n    </div>\n  )\n}\n  \n\nconst OtherInfo = ({setError, error}) => (\n  <React.Fragment>\n    <Field \n      name=\"birthday\" \n      component={RenderDatePicker} \n      label={'DATE OF BIRTH'} \n      validate={required}\n      setError={setError}\n      error={error}\n    />\n    <Field \n      name=\"gender\" \n      component={renderGender} \n      label={'GENDER'}\n    />\n    <div className=\"other-info\">\n      <label className=\"other-info__label\">WHERE DID YOU HERE ABOUT US?</label>\n      <div className=\"other-info__resource-wrapper\">\n        <i className=\"fas fa-chevron-down other-info__resource-arrow\"></i>\n        <Field \n          name=\"hearAboutUs\" \n          component=\"select\"\n          className=\"other-info__resource-select\"\n        >\n        <option></option>\n        <option value=\"facebook\">Facebook</option>\n        <option value=\"linkedIn\">LinkedIn</option>\n        <option value=\"other\">Other</option>\n      </Field>\n      </div>\n    </div>\n  </React.Fragment>\n)\n\nconst mapStateToProps = (state) => ({\n  error: state.mainReducer.error,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setError: (error) => dispatch(setErrorAction(error))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherInfo)","import { \n  NEXT_STEP, \n  PREV_STEP,\n  SET_ERROR,\n} from './constants'\n\nexport const nextStepAction = () => ({\n    type: NEXT_STEP\n  })\n  \nexport const prevStepAction = () => ({\n    type: PREV_STEP\n  })\n\nexport const setErrorAction = (error) => ({\n  type: SET_ERROR,\n  payload: error\n})","export const NEXT_STEP = 'NEXT_STEP';\nexport const PREV_STEP = 'PREV_STEP';\nexport const SET_ERROR = 'SET_ERROR';","import React from 'react';\nimport './Completed.scss';\n\n\nexport const Completed = () => (\n    <div className=\"completed\">\n      <i className=\"fas fa-check-circle completed__icon\"></i>\n      <button type=\"submit\" className=\"completed__button\">\n        Go to Dashboard\n        <span>\n            <i className='fas fa-arrow-right completed__arrow'></i>\n          </span>\n      </button>\n    </div>\n)","import React from 'react';\nimport { reduxForm, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { \n  nextStepAction, \n  prevStepAction,\n} from '../redux/actionCreators';\nimport {EmailPass} from './signupComponents/EmailPass/EmailPass';\nimport OtherInfo from './signupComponents/OtherInfo/OtherInfo';\nimport {Completed} from './signupComponents/Completed/Completed'\nimport './MyReduxForm.scss'\n\n const MyReduxForm = ({\n   handleSubmit, \n   step,\n   error,\n   nextStep,\n   prevStep,\n   setError,\n   valid,\n   }) => {\n  const getComponent = () => {\n    switch(step) {\n      case 1: \n        return <EmailPass/>\n      case 2: \n        return <OtherInfo setError={setError}/>\n      case 3: \n        return <Completed />\n      default: \n        return <EmailPass />\n    }\n  }\n\n  \n\n  return (\n    <div className=\"signup\">\n    <div className=\"signup__wrapper\">\n      <h3 className=\"signup__title\">{step === 3 ? 'Thank you!' : 'Signup'}</h3>\n      <div className='signup__progress'>\n        <div className={clsx(\n          'signup__completed', \n          step===1 ? 'signup__completed--33' \n          : step===2 ? 'signup__completed--66' \n          : step===3 ? 'signup__completed--100' \n          : ''\n          )}\n        />\n        <div className={clsx(\n          'signup__incompleted', \n          step===1 ? 'signup__incompleted--66' \n          : step===2 ? 'signup__incompleted--33' \n          : ''\n          )}\n        />\n      </div>\n\n      <form className=\"signup-inner\" onSubmit={handleSubmit}>\n        {getComponent()}\n      </form>\n\n      <div className={clsx(\n        'signup__breakline',\n        step === 3 ? 'signup__breakline--hide'\n          : ''\n        )}\n      />\n      <div className=\"signup__buttons-box\">\n        <button className={clsx(\n          'signup__button',\n          'signup__button--prev',\n          (step === 1 || step === 3) ? 'signup__button--hide'\n            : ''\n        )} \n          onClick={prevStep} \n          type=\"button\"\n        >\n          Prev\n        </button>\n\n        <button \n          className={clsx(\n            'signup__button',\n            'signup__button--next',\n            step === 3 ? 'signup__button--hide'\n              : ''\n            )} \n          onClick={nextStep} \n          type=\"button\"\n          \n          disabled={!valid || error}\n        >\n          Next\n          <span>\n            <i className={clsx(\n              'fas fa-arrow-right',\n              'signup__arrow',\n              'signup__arrow--right',\n              (!valid || error) ? 'signup__arrow--hide'\n                : ''\n              )}\n            >\n            </i>\n          </span>\n        </button>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nconst selector = formValueSelector('signup');\n\nconst MapStateToProps = (state) => ({\n  step: state.mainReducer.step,\n  error: state.mainReducer.error,\n  password: selector(state , 'password')\n})\n\nconst MapDispatchToProps = (dispatch) => ({\n  nextStep: () => dispatch(nextStepAction()),\n  prevStep: () => dispatch(prevStepAction())\n})\n\nconst ConnectReduxForm = connect(\n  MapStateToProps,\n  MapDispatchToProps,\n)(MyReduxForm)\n\nconst Enhanced = reduxForm({\n  form: 'signup',\n  onSubmit: (formData) => console.log(JSON.stringify(formData))\n})(ConnectReduxForm);\n\nexport { Enhanced as MyReduxForm }","import React from 'react';\nimport './App.scss';\nimport {MyReduxForm} from './components/MyReduxForm'\n\nfunction App() {\n  return (\n      <MyReduxForm />\n  );\n}\n\nexport default App;\n","import {\n  NEXT_STEP, \n  PREV_STEP,\n  SET_ERROR\n} from './constants'\n\nconst initialState = {\n    step: 1,\n    error: false\n  }\n  \n  export const mainReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case NEXT_STEP:\n        return {\n          ...state,\n          step: state.step + 1\n        };\n      case PREV_STEP:\n        return {\n          ...state,\n          step: state.step - 1\n        }\n      case SET_ERROR:\n        return {\n          ...state,\n          error: action.payload\n        }\n      default:\n        return state;\n    };\n  };","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport {mainReducer} from './mainReducers'\n\nexport const rootReducer = combineReducers({\n    mainReducer,\n    form: formReducer\n  })","import { createStore } from 'redux';\nimport { rootReducer } from './rootReducer'\n\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}